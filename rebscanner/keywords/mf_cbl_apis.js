"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = {
    "url": "https://documentation.microfocus.com/help/topic/GUID-0E0191D8-C39A-44D1-BA4C-D67107BAF784/HRCLRHCALL18.html?cp=6_7_5_6_0",
    "name": "Micro Focus CBL library routines",
    "apis": {
        "CBL_ABORT_RUN_UNIT": "Aborts the current run unit irrespective of the e of existing threads",
        "CBL_ALLOC_DYN_MEM": "Dynamically allocates memory, and can associate it with the calling program.",
        "CBL_ALLOC_MEM": "Dynamically allocates memory, and can associate allocated heap data with a thread and/or the calling program.",
        "CBL_ALLOC_SHMEM": ",Dynamically allocates shared memory.",
        "CBL_ALLOC_THREAD_MEM": "Allocates thread-specific heap memory.",
        "CBL_AND": "Does a logical AND between the bits of two data items.",
        "CBL_CANCEL": "Cancels a COBOL program.",
        "CBL_CANCEL_PROC": "Provides control over program cancels.",
        "CBL_CFGREAD_DYNFH": "The CBL_CFGREAD_DYNFH option determines whether the File Handler should reread its configuration file for configurable custom file handlers",
        "CBL_CFGREAD_EXTFH": "Forces the File Handler to reread its configuration file.",
        "CBL_CHANGE_DIR": "Changes the current directory.",
        "CBL_CHECK_FILE_EXIST": "Checks whether a file exists and if it does, returns details of when the file was last modified.",
        "CBL_CLEAR_SCR": "Clears the whole screen to a specified character and attribute.",
        "CBL_CLOSE_FILE": "Closes a file opened for byte-stream operations.",
        "CBL_CLOSE_VFILE": "Closes a heap.",
        "CBL_COPY_FILE": "Copies a file.",
        "CBL_CREATE_DIR": "Creates a subdirectory. All the directories in the given path, except the last, must already exist.",
        "CBL_CREATE_FILE": "Creates a new file and leaves it open for byte-stream operations.",
        "CBL_CTF_COMP_PROPERTY_GET": "Returns a named property value for a component.",
        "CBL_CTF_COMP_PROPERTY_SET": "Specifies a value for a component's property.",
        "CBL_CTF_DEST": "Specifies an output destination by associating (or disassociating) an emitter with (or from) a component or the default emitter list.",
        "CBL_CTF_EMITTER_PROPERTY_GET": "Returns a named property value for an emitter.",
        "CBL_CTF_EMITTER_PROPERTY_SET": "Sets a named property value for an emitter.",
        "CBL_CTF_LEVEL": "Specifies the trace level to be used for a specific component, or the default trace level if a component identifier is not specified.",
        "CBL_CTF_TRACE": "Outputs an event to one or more output destinations.",
        "CBL_CTF_TRACER_GET": "Returns a tracer handle that can be passed to other tracing routines to identify a component.",
        "CBL_CTF_TRACER_LEVEL_GET": "Returns a tracer's current threshold trace level.",
        "CBL_CTF_TRACER_NOTIFY": "Installs or uninstalls a tracer configuration callback function.",
        "CBL_CULL_RUN_UNITS": "Clears any dead run units.",
        "CBL_DEBUGBREAK": "Enables a COBOL program to invoke .",
        "CBL_DEBUG_START": "Enables a COBOL program to initiate advanced remote debugging or cross-session debugging.",
        "CBL_DEBUG_STOP": "Enables a COBOL program to stop or suspend animation.",
        "CBL_DELETE_DIR": "Deletes a directory. The directory is deleted only if it is empty.",
        "CBL_DELETE_FILE": "Deletes a file.",
        "CBL_DIR_SCAN_END": "Terminates a search operation.",
        "CBL_DIR_SCAN_READ": "Searches for the next entry in the file system using a search handle returned by a previous CBL_DIR_SCAN_START.",
        "CBL_DIR_SCAN_START": "Initializes a search for a file or directory.",
        "CBL_EQ": "Does a logical EQUIVALENCE between the bits of two data items.",
        "CBL_ERROR_PROC": "Installs or removes an error procedure to be invoked automatically when a run-time system error occurs.",
        "CBL_EVENT_CLEAR": "Clears the specified event.",
        "CBL_EVENT_CLOSE": "Closes the supplied event handle.",
        "CBL_EVENT_OPEN_INTRA": "Creates an intra-process event.",
        "CBL_EVENT_POST": "Posts the specified event.",
        "CBL_EVENT_WAIT": "Waits for the event to be posted.",
        "CBL_EXEC_RUN_UNIT": "Creates a synchronous or asynchronous run unit.",
        "CBL_EXIT_PROC": "Installs or removes a closedown procedure to be invoked automatically when the application terminates.",
        "CBL_FILENAME_CONVERT": "Converts a filename between space-terminated and null-terminated format.",
        "CBL_FILENAME_MAX_LENGTH": "Returns the maximum size of a filename that the run-time system and the current operating system can handle. This size does not include any terminators (null or space).",
        "CBL_FLUSH_FILE": "Ensures all file buffers for a file are written to disk. This includes both run-time system buffers and operating system buffers.",
        "CBL_FREE_DYN_MEM": "Frees dynamically allocated memory allocated by the CBL_ALLOC_DYN_MEM routine.",
        "CBL_FREE_MEM": "Frees dynamically allocated memory.",
        "CBL_FREE_RECORD_LOCK": "Releases a record lock on a file.",
        "CBL_FREE_SHMEM": "Frees dynamically allocated shared memory",
        "CBL_FREE_THREAD_MEM": "Frees dynamically allocated thread-specific heap memory.",
        "CBL_GET_CSR_POS": "Returns the cursor position.",
        "CBL_GET_CURRENT_DIR": "Returns the current directory.",
        "CBL_GET_EXIT_INFO": "Enables an application to determine under what circumstances an exit procedure has been invoked.",
        "CBL_GET_KBD_STATUS": "Checks whether there is a character waiting to be read from the keyboard.",
        "CBL_GET_OS_INFO": "Returns information about the operating system environment.",
        "CBL_GET_PROGRAM_INFO": "Returns information for a named program, or a program in the current call stack.",
        "CBL_GET_RECORD_LOCK": "Obtains a record lock on a file.",
        "CBL_GET_SCR_GRAPHICS": "Returns operating system independent codes for graphics characters.",
        "CBL_GET_SCR_LINE_DRAW": "Returns a table of values defining the character values required by the run-time system screen output routines to correctly display given line drawing characters.",
        "CBL_GET_SCR_SIZE": "Returns information about the size of the screen.",
        "CBL_GET_SHMEM_PTR": "Reads a named value.",
        "CBL_IMP": "Does a logical IMPLIES between the bits of two data items.",
        "CBL_JOIN_FILENAME": "Forms a filename by joining together its component parts; that is, the pathname, basename and extension.",
        "CBL_LOCATE_FILE": "This routine has two uses. It can be used to expand an environment variable in a file specification, where the environment variable contains a list of several paths. It can also determine whether an OPEN INPUT ement using a particular file specification finds the file in a library file or as a separate disk file.",
        "CBL_MEM_STRATEGY": "Changes the memory strategy for an application dynamically.",
        "CBL_MEM_VALIDATE": "Validates memory allocations, monitored freed memory, and, if the operating system supports it, compacts memory heaps.",
        "CBL_MONITOR_BROWSE": "Acquires the specified monitor's browse capability for the current thread, blocking until that capability can be acquired.",
        "CBL_MONITOR_BROWSE_TO_READ": "Converts monitor browse capability already acquired by the current thread to read capability.",
        "CBL_MONITOR_BROWSE_TO_WRITE": "Converts monitor browse capability already acquired by the current thread to write capability, blocking until this can be achieved.",
        "CBL_MONITOR_CLOSE": "Closes the supplied monitor handle.",
        "CBL_MONITOR_OPEN_INTRA": "Creates a monitor synchronization object for thread synchronization within one process.",
        "CBL_MONITOR_READ": "Acquires the specified monitor's read capability for the current thread/process, blocking until that capability can be acquired.",
        "CBL_MONITOR_RELEASE": "Releases any lock currently applied to the specified monitor by CBL_MONITOR_WRITE, CBL_MONITOR_READ or CBL_MONITOR_BROWSE.",
        "CBL_MONITOR_UNBROWSE": "Releases the monitor's browse capability that was acquired by CBL_MONITOR_BROWSE or CBL_MONITOR_WRITE_TO_BROWSE.",
        "CBL_MONITOR_UNREAD": "Releases the monitor's read capability that was acquired by CBL_MONITOR_READ or CBL_MONITOR_BROWSE_TO_READ.",
        "CBL_MONITOR_UNWRITE": "Releases the monitor's write capability that was acquired by CBL_MONITOR_WRITE or CBL_MONITOR_BROWSE_TO_WRITE.",
        "CBL_MONITOR_WRITE": "Acquires the specified monitor's write capability for the current thread, blocking until that capability can be acquired.",
        "CBL_MONITOR_WRITE_TO_BROWSE": "Converts monitor write capability already acquired by the current thread to browse capability.",
        "CBL_MUTEX_ACQUIRE": "Acquires a mutex for the specified thread",
        "CBL_MUTEX_CLOSE": "Closes the specified mutex.",
        "CBL_MUTEX_OPEN_INTRA": "Create an intra-process mutex.",
        "CBL_MUTEX_RELEASE": "Releases the specified mutex.",
        "CBL_NLS_CLOSE_MSG_FILE": "Closes a National Locale Support (NLS) message file.",
        "CBL_NLS_COMPARE": "Compares two strings.",
        "CBL_NLS_INFO": "Gets/sets national language information.",
        "CBL_NLS_OPEN_MSG_FILE": "Open a National Locale Support (NLS) message file.",
        "CBL_NLS_READ_MSG": "Reads a message from a National Locale Support (NLS) message file.",
        "CBL_NOT": "Does a logical NOT on the bits of a data item.",
        "CBL_OPEN_FILE": "Opens an existing file for byte-stream operations.",
        "CBL_OPEN_VFILE": "Opens a heap.",
        "CBL_OR": "Does a logical OR between the bits of two data items.",
        "CBL_PUT_SHMEM_PTR": "Creates or updates a named value.",
        "CBL_READ_FILE": "Reads bytes from a file.",
        "CBL_READ_KBD_CHAR": "Waits until a character is typed and then reads it with no echo.",
        "CBL_READ_SCR_ATTRS": "Reads a string of attributes from the screen.",
        "CBL_READ_SCR_CHARS": "Reads a string of characters from the screen.",
        "CBL_READ_SCR_CHATTRS": "Reads a string of characters and their attributes from the screen.",
        "CBL_READ_VFILE": "Reads bytes from a heap.",
        "CBL_RENAME_FILE": "Changes the name of a file.",
        "CBL_SCR_ALLOCATE_COLOR": "Finds an entry in the colormap for each of one or more given RGB values.",
        "CBL_SCR_ALLOCATE_VC_COLOR": "Sets one or more specified virtual colormap entries to the RGB values supplied.",
        "CBL_SCR_CREATE_VC": "Creates a virtual colormap and copies the contents of the system colormap to it.",
        "CBL_SCR_DESTROY_VC": "Destroys a virtual colormap, causing the run-time system to revert to using the system colormap.",
        "CBL_SCR_GET_ATTR_INFO": "Returns information about the attribute system for the environment.",
        "CBL_SCR_GET_ATTRIBUTES": "Gets the character attribute code, and foreground and background colormap indexes for one or more entries in the attribute table.",
        "CBL_SCR_NAME_TO_RGB": "Converts a single named color into an RGB value.",
        "CBL_SCR_QUERY_COLORMAP": "Returns the RGB value for one or more colormap entries.",
        "CBL_SCR_RESTORE": "Restores an area of the character-mode screen previously saved with a call to the CBL_SCR_SAVE call-by-name routine.",
        "CBL_SCR_RESTORE_ATTRIBUTES": "Restores the attribute table to the saved values that are associated with the specified buffer handle.",
        "CBL_SCR_SAVE": "Saves away an area of the screen (text and attributes) for subsequent restoration.",
        "CBL_SCR_SAVE_ATTRIBUTES": "Saves the current settings of the attribute table.",
        "CBL_SCR_SET_ATTRIBUTES": "Defines the character attribute, and foreground and background colormap indexes associated with each of one or more COBOL attribute values (attribute table indexes).",
        "CBL_SCR_SET_PC_ATTRIBUTES": "Sets up the current COBOL attribute table so as to emulate, as closely as possible, the IBM-PC attribute table.",
        "CBL_SEMAPHORE_ACQUIRE": "Acquires one of the resources represented by the semaphore by decrementing the associated count.",
        "CBL_SEMAPHORE_CLOSE": "Closes the specified semaphore.",
        "CBL_SEMAPHORE_OPEN_INTRA": "Creates an intra-process semaphore.",
        "CBL_SEMAPHORE_RELEASE": "Releases one of the resources represented by the semaphore by incrementing the associated count.",
        "CBL_SET_CSR_POS": "Moves the cursor.",
        "CBL_SPLIT_FILENAME": "Splits a filename into its component parts; that is, the pathname, basename and extension.",
        "CBL_SUBSYSTEM": "Declares or deallocates subsystems.",
        "CBL_SWAP_SCR_CHATTRS": "Swaps a string of characters and their attributes with a string from the screen.",
        "CBL_TEST_RECORD_LOCK": "Tests for an existing record lock on a file.",
        "CBL_THREAD_CREATE": "Creates a thread from a named entry point.",
        "CBL_THREAD_CREATE_P": "Creates a thread from a procedure pointer.",
        "CBL_THREAD_DETACH": "Frees thread resources when the thread terminates.",
        "CBL_THREAD_EXIT": "Terminates the current thread.",
        "CBL_THREAD_IDDATA_ALLOC": "Allocates an id-data area for the current thread.",
        "CBL_THREAD_IDDATA_GET": "Returns a pointer to the id-data area for the specified thread.",
        "CBL_THREAD_KILL": "Kills the specified thread, terminating it abnormally and detaching all resources associated with it.",
        "CBL_THREAD_LIST_END": "Used in conjunction with CBL_THREAD_LIST_START and CBL_THREAD_LIST_NEXT to obtain a list of all currently existing threads that the run-time system knows about. It is required to terminate a CBL_THREAD_LIST_START.",
        "CBL_THREAD_LIST_NEXT": "Used in conjunction with CBL_THREAD_LIST_START and CBL_THREAD_LIST_END to obtain a list of all currently existing threads that the run-time system knows about. The CBL_THREAD_LIST_NEXT call takes returns the next item in the list of threads.",
        "CBL_THREAD_LIST_START": "Used in conjunction with CBL_THREAD_LIST_NEXT and CBL_THREAD_LIST_END to obtain a list of all currently existing threads that the run-time system knows about.",
        "CBL_THREAD_LOCK": "Locks most functions of the thread-handling routines.",
        "CBL_THREAD_PROG_LOCK": "With CBL_THREAD_PROG_UNLOCK, provides a single pre-initialized synchronization object per calling COBOL program",
        "CBL_THREAD_PROG_UNLOCK": "With CBL_THREAD_PROG_LOCK, provides a single pre-initialized synchronization object per calling COBOL program",
        "CBL_THREAD_RESUME": "Resumes a thread that was or will be suspended by CBL_THREAD_SUSPEND.",
        "CBL_THREAD_SELF": "Stores the thread identifier of the current thread.",
        "CBL_THREAD_SLEEP": "Causes the calling thread to give up control to the processor for the given number of milliseconds.",
        "CBL_THREAD_SUSPEND": "Suspends the current thread.",
        "CBL_THREAD_UNLOCK": "Unlocks most functions of the thread handling routines.",
        "CBL_THREAD_WAIT": "Waits for completion of the specified non-detached thread, or returns immediately if the thread has already completed.",
        "CBL_THREAD_YIELD": "Yields the rest of the current thread's timeslice.",
        "CBL_TOLOWER": "Converts a string of letters to lower case.",
        "CBL_TOUPPER": "Converts a string of letters to upper case.",
        "CBL_TSTORE_CLOSE": "Closes a handle returned by CBL_TSTORE_CREATE.",
        "CBL_TSTORE_CREATE": "Creates a handle for and specifies the size of a thread-storage area. These values can be used in subsequent calls to CBL_TSTORE_GET. The new thread-storage area is initialized to zeroes.",
        "CBL_TSTORE_GET": "Gets a pointer to the thread-specific memory specified by CBL_TSTORE_CREATE.",
        "CBL_WRITE_FILE": "Writes bytes to a file.",
        "CBL_WRITE_SCR_ATTRS": "Writes a string of attributes to the screen.",
        "CBL_WRITE_SCR_CHARS": "Writes a string of characters to the screen.",
        "CBL_WRITE_SCR_CHARS_ATTR": "Writes a string of characters to the screen, giving them all the same attribute.",
        "CBL_WRITE_SCR_CHATTRS": "Writes a string of characters and their attributes to the screen.",
        "CBL_WRITE_SCR_N_ATTR": "Writes a specified attribute to a string of positions on the screen.",
        "CBL_WRITE_SCR_N_CHAR": "Writes a specified character to a string of positions on the screen.",
        "CBL_WRITE_SCR_N_CHATTR": "Writes a specified character and attribute to a string of positions on the screen.",
        "CBL_WRITE_SCR_TTY": "Writes a string of characters to the screen starting at the current position and scrolling.",
        "CBL_WRITE_VFILE": "Writes bytes to a heap.",
        "CBL_XOR": "Does a logical XOR between the bits of two data items.",
        "CBL_YIELD_RUN_UNIT": "Yields the remainder of a run-unit's time-slice."
    }
};
//# sourceMappingURL=mf_cbl_apis.js.map