{
    "mysql simple command ...": {
		"prefix": "sql",
		"body": [
		"mysql_cmd",
        "\t[",
        "\t\"\t$0\"",
        "\t]"
		],
		"description": "MySQL command"
	},
    "mysql tar cmd ...": {
		"prefix": "sql tar",
		"body": [
		"mysql_cmd ",
        "[",
        "\t\"\t$0\"",
        "]",
        "tar: get_rekordset copy db"
		],
		"description": "MySQL tar command"
	},
    "mysqlta index cmd ...": {
		"prefix": "sql tar index",
		"body": [
		"mysql_cmd ",
        "[",
        "\t\"\t$0\"",
        "]",
        "tar: get_rekordset copy db"
		],
		"description": "MySQL tar command"
	},

    "mysql rek cmd ...": {
		"prefix": "sql rek",
		"body": [
		"mysql_cmd ",
        "[",
        "\t\"\t$0\"",
        "]",
        "rek: get_rekord first db"
		],
		"description": "MySQL rek command"
	},
    "excel cmd ...": {
		"prefix": "excelcmd",
		"body": [
			"excel_com compose ",
            "[",
            "\tcolumn \t$0",
			"\tformat \"f:0\" align \"h:Center\" \"v:Center\" \"w:1\" ; header",
			"\tinterior \"c:#E6E6E6\" \"p:Solid\"",
			"\t$4//${0:TODO}: handle exception",
            "\t;",
            "\trow  \"h:30\" interior 0 align \"h:Center\" font \"b:1\"",
            "\tcell (\"Cell1\")",
			"]"
		],
		"description": "excel_com compose"
	},
    "if ...": {
		"prefix": "if ",
		"body": [
            "if  \t$0",
            "[",
            "\t$1",
            "]"
		],
		"description": "if desc"
	},

    "either ...": {
		"prefix": "either",
		"body": [
            "either \t$0",
            "[",
            "\t\t$1",
            "]",
            "[",
            "\t$2",
            "]"
		],
		"description": "if else"
	},
    "while ...": {
		"prefix": "while",
		"body": [
            "while [ \t$0 ]",
            "[",
            "\t\t$1",
            "]"
		],
		"description": "while"
	},
    "foreach ar ...": {
		"prefix": "foreach [",
		"body": [
            "foreach [ \t$0 ]",
            "[",
            "\t$1",
            "]"
		],
		"description": "foreach []"
	},
    "foreach ...": {
		"prefix": "foreach ",
		"body": [
            "foreach ",
            "[",
            "\t$0",
            "]"
		],
		"description": "foreach "
	},
    "function ...":
    {
    "prefix": "func",
    "body":[
        ": func /local  ]",
        "[",
        "\t\t$1",
        "]"
    ],
    "description": "Function "
},
    "context ...":
    {
    "prefix": "context",
    "body":[
        ": context",
        "\t[",
        "\t\t$1",
        "\t]"
    ],
    "description": "context "
    },
    "switch default ...":
    {
    "prefix": "switch-def",
    "body":[
        "switch/default \t$0",
        "[",
        "\t$1 [ ]",
        "\t]",
        "\t[",
        "\t$2",
        "]"
    ],
    "description": "switch with default"
    },
    "switch":
    {
    "prefix": "switch ...",
    "body":[
        "switch \t$0",
        "[",
        "\t$1 [ ]",
        "]"
        
    ],
    "description": "switch "
    },
    "append ...":
    {
    "prefix": "append",
    "body":[
        "append",
        "[",
        "\t$0",
        "]"
        
    ],
    "description": "Append"
    },
    "make object ...":
    {
    "prefix": "make object",
    "body":[
        ": make object!",
        "[",
        "\t$0",
        "]"
        
    ],
    "description": "make object "
    }, 
    "make block ...":
    {
    "prefix": "make block",
    "body":[
        ": make block!",
        "[",
        "\t$0",
        "]"
        
    ],
    "description": "make block "
    },
    "charset ...":
    {
    "prefix": "charset : \"\"",
    "body":[
        " charset : \"\""
        
        
    ],
    "description": "charset : \"\""
    },
    "alert ...":
    {
    "prefix": "alert",
    "body":[
        "alert : \"\" exit"
        
        
    ],
    "description": "alert : \"\""
    },
    "get table value ...":
    {
    "prefix": "get_table_value : \"\"",
    "body":[
        "get_table_value  \"\t$0\" {var}"
        
        
    ],
    "description": "get_table_value  \"\" {var}"
    },
    "for ...":
    {
    "prefix": "for",
    "body":[
        "for i1 1 $0 1",
        "[",
        "\t",
        "]"
        
        
    ],
    "description": "get_table_value  \"\" {var}"
    },

    "tabla_keres ...":
    {
    "prefix": "tabla_keres",
    "body":[
        "if not tabla_keres \"\t$0\"",
        "[",
        "\ttabla/name: \"\"",
        "\ttabla/fejlec: \"\"",
        "\ttabla/lista: rejoin",
        "\t\t[",
        "\t\t\"\"",
        "\t]",
        "\ttabla/nevek: \"\"",
        "\ttabla/oszlop: \"[ ]\"",
        "\ttabla/tipus: \"[ ]\"",
        "\ttabla/order: \"[ ]\"",
        "\ttabla/index: \"[1 2 4]\"",
        "\ttabla/param: \"[ \"\" ]\"",
        "\ttabla/paramdef:",  
        "\t[",
        "\t\t[\"\" \"\" \"\" \"\"]",
        "\t]",            
        "]"
        ],
    "description": "tabla_keres"
    },
    "request/text/title/default ...":
    {
    "prefix": "request-text/title/default",
    "body":[
        "request-text/title/default \"\t$0\" sifra_dok0"
        ],
    "description": "request/text/title/default "
    },
    "tabla_blk ...":
    {
    "prefix": "tabla_blk ...t",
    "body":[
        "tabla_blk: compose",
        "[",
        "\tsize ablak_c/size",
        "\tbacktile polished color_f4",
        "\tat 10x10 btn \"Sz:M\" 40x24 color_l2",
        "\t\t[",
        "\t\tset_window_size 'm",
        "\t\tablak_arajz",
        "\t\t]",
        "\tat 100x10 text right \"\" 120x24",
        "\tat 220x10 check  24x24",
        "\t\t[",
        "\t\t\t",
        "\t\t]",

        "]"
        
        ],
    "description": "tabla_blk"
    }


}

